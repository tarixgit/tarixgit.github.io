{"version":3,"sources":["StepperNN.js","symbolSVG.js","Training.js","serviceWorker.js","index.js"],"names":["require","StepperNN","Provider","Node","state","activeStep","completed","Set","getSteps","setStep","_this","setState","handleNext","currentStep","props","handleBack","handleStep","step","handleReset","this","_this2","classes","steps","react_default","a","createElement","className","root","Stepper_default","editable","alternativeLabel","map","label","index","Step_default","key","StepButton","onClick","isStepComplete","length","Typography_default","instructions","Button_default","button","openExplanationModal","disabled","variant","color","React","Component","withStyles","theme","width","marginRight","spacing","unit","marginTop","marginBottom","symbolSVG","inputO","svg","x","y","delay","symbol","append","attr","style","transition","duration","outputW1","outputO2","d3","Training","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getStepDescription","head","body","getStepContent","String","raw","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","getStepFormulaDescription","descrFormulaOne","_templateObject11","descrFormulaTwo","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","_templateObject19","_templateObject20","_templateObject21","_templateObject22","_templateObject23","_templateObject24","updateLeftView","matrixSvg","svgGraph","svgInput","sizeOfPicture","h","w","_this$state","widthOfCell","heightOfCell","numberOfrows","numberOfInputNeuron","data","prepareMatrixData","oneInArr","dataFirstMatrix","widthOfDesr","moveSvgInputBack","drawOneDescr","coordX","coordY","drawOne","drawArrowDown","drawOneAsMatrix","drawArrowRight","drawFirstMatrix","updateChart","_this$state2","yPosition","moveSvgInput","drawSecondMatrix","svgNew","svgGraphNew","svgInputNew","currentStepFormula","currentDescription","_this$getStepFormulaD","selectAll","remove","inputData","svgGraphWithSymbols","ipnutData","outputData","hiddenLayerData","svgSymbolsPanel","i","push","neuronValue","numberOfOutputNeuron","hiddenLayers","currentLayer","j","firstXCoordinate","div","select","refVis","forEach","layerIndex","enter","radius","d","on","html","event","pageX","pageY","accessorLayer","accessor","matrixRows","matrixColumns","xpos","ypos","height","row","column","click","value","drawRoundBracket","x1","y1","x2","y2","dy","drawKreuz","drawMatrixDescr","refVisTemp","withoutArrow","svgTemp","halfWidth","matrixData","x_coord","y_coord","newMatrixSvg","matrixSvgOne","drawMatrix","numberOfNeuronInHiddenLayer","matrixSvgTwo","cell","text","arrow","domRect","node","parentNode","getBoundingClientRect","ease","easeSin","isModalOpen","closeExplanationModal","counter","selectedStep","_templateObject25","_templateObject26","viz","Typography_Typography","gutterBottom","ref","display","refVisTempOne","Training_Provider","Training_Node","inline","refVisTempTwo","src_StepperNN","Modal_default","aria-labelledby","aria-describedby","open","onClose","top","left","transform","paper","id","align","slider","padding","thumbIcon","borderRadius","thumbIconWrapper","backgroundColor","position","palette","background","boxShadow","shadows","outline","Boolean","window","location","hostname","match","ReactDOM","render","src_Training","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2998acdd.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport StepButton from \"@material-ui/core/es/StepButton/StepButton\";\nconst { Provider, Node } = require(\"@nteract/mathjax\");\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n    },\n    button: {\n        marginRight: theme.spacing.unit,\n    },\n    instructions: {\n        marginTop: theme.spacing.unit,\n        marginBottom: theme.spacing.unit,\n    },\n});\n\nclass StepperNN extends React.Component {\n    state = {\n        activeStep: 0,\n        completed: new Set(),\n    };\n\n    getSteps = () => {\n        return ['Initial', 'Multiple input with weight', 'Multiple output with weight', 'Deviation of error', 'Summary error',\n            'Deviation of Sigmoid 1', 'Deviation of Sigmoid 2', 'Correction coeff. 1', 'Correction coeff. 2',  'Weight correction 1', 'Weight correction 2'];\n    };\n\n    setStep = (activeStep) => {\n        this.setState({activeStep});\n    };\n\n    handleNext = () => {\n        const { activeStep } = this.state;\n        const currentStep = activeStep + 1;\n        this.props.setStep(currentStep);\n        this.setStep(currentStep);\n    };\n\n    handleBack = () => {\n        const { activeStep } = this.state;\n        const currentStep = activeStep - 1;\n        this.props.setStep(currentStep);\n        this.setStep(currentStep);\n    };\n\n    handleStep = step => () => {\n        const currentStep = step;\n        this.props.setStep(currentStep);\n        this.setStep(currentStep);\n    };\n\n\n    handleReset = () => {\n        const currentStep = 0;\n        this.props.setStep(currentStep);\n        this.setStep(currentStep);\n    };\n\n    isStepComplete(step) {\n        return step < this.state.activeStep;\n    }\n\n    render() {\n        const { classes } = this.props;\n        const steps = this.getSteps();\n        const { activeStep } = this.state;\n\n        return (\n            <div className={classes.root}>\n                <Stepper activeStep={activeStep} editable alternativeLabel>\n                    {steps.map((label, index) => {\n                        return (\n                            <Step key={label}>\n                                <StepButton\n                                    onClick={this.handleStep(index)}\n                                    completed={this.isStepComplete(index)}\n                                >\n                                    {label}\n                                </StepButton>\n                            </Step>\n                        );\n                    })}\n                </Stepper>\n                <div className={'stepButton'}>\n                    {activeStep === steps.length ? (\n                        <div>\n                            <Typography className={classes.instructions}>\n                                One cycle of trainin completed - algo take the next Data and start again.\n                            </Typography>\n                            <Button onClick={this.handleReset} className={classes.button}>\n                                Reset\n                            </Button>\n                        </div>\n                    ) : (\n                        <div>\n                            <div>\n                                <Button\n                                    onClick={this.props.openExplanationModal}\n                                    className={classes.button}\n                                >\n                                    Show explanations\n                                </Button>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={this.handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                                </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={this.handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(StepperNN);\n","const d3 = require('d3');\n\nexport default {\n    inputO: (svg, x, y, delay) => {\n        const symbol = svg.append('svg')\n            .attr('x', !!x ? x : 0)\n            .attr('y', !!y ? y : 0)\n            .attr('viewBox', '0 0 40 60')\n            .attr('width', '20')\n            .attr('height', '60')\n            .style('opacity', delay ? .0 : 1);\n        // .attr('width', 10)\n        // .attr('height', 42)\n        symbol.append('path')\n            .attr('d', 'M0,10.9272031 C0,10.9272031 0,11.1181354 0,11.5 C0,11.8818646 0.21021021,12.1756066 0.630630631,12.3812261 L35.0900901,12.3812261 C31.6066066,14.9367816 29.4594595,18.2120051 28.6486486,22.2068966 C28.6486486,22.2362708 28.6486486,22.2803321 28.6486486,22.3390805 C28.6486486,22.3978289 28.6336336,22.4418902 28.6036036,22.4712644 C28.6036036,22.8237548 28.8588589,23 29.3693694,23 L29.5045045,23 C29.7747748,23 29.954955,22.9853129 30.045045,22.9559387 C30.1351351,22.9265645 30.2252252,22.8678161 30.3153153,22.7796935 C30.4054054,22.6915709 30.4504505,22.559387 30.4504505,22.3831418 C30.4504505,22.2068966 30.4954955,21.9719029 30.5855856,21.6781609 C30.6756757,21.3844189 30.7957958,21.0172414 30.9459459,20.5766284 C31.6066066,18.6085568 32.7027027,16.8461047 34.2342342,15.289272 C35.7657658,13.7324393 37.5525526,12.6309068 39.5945946,11.9846743 C39.8648649,11.8965517 40,11.7349936 40,11.5 C40,11.3237548 39.9249249,11.1915709 39.7747748,11.1034483 C39.6246246,11.0153257 39.2642643,10.8684547 38.6936937,10.6628352 C38.1231231,10.4572158 37.5525526,10.1781609 36.981982,9.8256705 C35.7507508,9.06194125 34.6846847,8.1807152 33.7837838,7.18199234 C32.8828829,6.18326948 32.2072072,5.19923372 31.7567568,4.22988506 C31.3063063,3.2605364 30.990991,2.52618135 30.8108108,2.02681992 C30.6306306,1.52745849 30.5105105,1.07215837 30.4504505,0.66091954 C30.3903904,0.367177522 30.3153153,0.190932312 30.2252252,0.132183908 C30.1351351,0.0734355045 29.8948949,0.0293742018 29.5045045,0 C28.9039039,0 28.6036036,0.16155811 28.6036036,0.48467433 C28.6036036,0.690293742 28.6786787,1.05747126 28.8288288,1.5862069 C29.7897898,5.28735632 31.8768769,8.29821201 35.0900901,10.6187739 L0.630630631,10.6187739 C0.21021021,10.8243934 0,11.1181354 0,11.5 L0,10.9272031 Z')\n            .attr('fill', '#000')\n            .attr('fill-rule', '#nonzero')\n            .attr('stroke', 'black')\n            .attr('stroke-width', '1');\n        symbol.append('path')\n            .attr('d', 'M35,45.4022039 C35,41.8117539 33.9797101,38.3461892 31.9391304,35.0055096 C29.8985507,31.6648301 27.2681159,28.9954086 24.0478261,26.9972452 C20.8275362,24.9990817 17.5275362,24 14.1478261,24 C11.0550725,24 8.40869565,24.8898072 6.20869565,26.6694215 C4.00869565,28.4490358 2.62173913,31.040404 2.04782609,34.4435262 C2.01594203,34.6932966 2,35.3645546 2,36.4573003 C2,39.6418733 2.76521739,42.6703398 4.29565217,45.5426997 C5.82608696,48.4150597 7.8826087,50.959596 10.4652174,53.1763085 C14.4188406,56.3921028 18.3884058,58 22.373913,58 C23.5855072,58 24.3507246,57.9843893 24.6695652,57.953168 C27.7623188,57.5160698 30.2492754,56.1735537 32.1304348,53.9256198 C34.0115942,51.677686 34.9681159,48.8365473 35,45.4022039 Z M30,48.2229102 C30,50.9783282 29.2652778,53.130031 27.7958333,54.6780186 C26.3263889,56.2260062 24.4895833,57 22.2854167,57 C19.7298611,57 17.2701389,56.0712074 14.90625,54.2136223 C12.3506944,52.2631579 10.4020833,49.5232198 9.06041667,45.993808 C7.71875,42.4643963 7.03194444,39.1826625 7,36.1486068 C7,33.3622291 7.68680556,31.1486068 9.06041667,29.5077399 C10.4340278,27.8668731 12.2548611,27.0309598 14.5229167,27 C17.3979167,27 20.1291667,28.2229102 22.7166667,30.6687307 C25.3041667,33.1145511 27.26875,36.4427245 28.6104167,40.6532508 C29.5368056,43.5944272 30,46.1176471 30,48.2229102 Z')\n            .attr('fill', '#000')\n            .attr('fill-rule', '#nonzero')\n            .attr('stroke', 'black')\n            .attr('stroke-width', '1')\n            .attr('transform', 'translate(18.500000, 41.000000) scale(-1, 1) translate(-18.500000, -41.000000)');\n        if (delay) {\n            symbol.transition()\n                .delay(delay)\n                .duration(1000)\n                .style('opacity', .9);\n        }\n        return symbol;\n    },\n    outputW1: (svg, x, y, delay) => {\n        const symbol = svg.append('svg')\n            .attr('x', !!x ? x : 0)\n            .attr('y', !!y ? y : 0)\n            .attr('viewBox', '0 0 54 60')\n            .attr('width', '25')\n            .attr('height', '80')\n            .style('opacity', delay ? .0 : 1);\n        // .attr('width', 10)\n        // .attr('height', 42)\n        symbol.append('path')\n            .attr('d', 'M47.7790698,37.3573574 L47.4011628,37.2072072 C47.129845,37.1071071 46.7422481,37.007007 46.2383721,36.9069069 C45.7344961,36.8068068 45.1724806,36.7367367 44.5523256,36.6966967 L44,36.6966967 L44,38.0780781 L44.5523256,38.0780781 C45.4631783,38.1181181 46.3062016,38.2682683 47.0813953,38.5285285 C47.8565891,38.7887888 48.3992248,39.029029 48.7093023,39.2492492 C49.0193798,39.4694695 49.2906977,39.6896897 49.5232558,39.9099099 C49.5620155,39.96997 49.6782946,40 49.872093,40 C50.0465116,40 50.2112403,39.9399399 50.3662791,39.8198198 L50.3662791,30.8408408 L50.3953488,21.8318318 C50.5310078,21.6916917 50.6472868,21.6016016 50.744186,21.5615616 C50.8410853,21.5215215 51.0736434,21.4814815 51.4418605,21.4414414 C51.8100775,21.4014014 52.4108527,21.3813814 53.244186,21.3813814 L54,21.3813814 L54,20 L53.6802326,20 C53.2732558,20.0600601 51.7325581,20.0900901 49.0581395,20.0900901 C46.4224806,20.0900901 44.9011628,20.0600601 44.494186,20 L44.1453488,20 L44.1453488,21.3813814 L44.9011628,21.3813814 C45.3275194,21.3813814 45.6957364,21.3813814 46.005814,21.3813814 C46.3158915,21.3813814 46.5581395,21.3913914 46.7325581,21.4114114 C46.9069767,21.4314314 47.0620155,21.4614615 47.1976744,21.5015015 C47.3333333,21.5415415 47.4108527,21.5615616 47.4302326,21.5615616 C47.4496124,21.5615616 47.5077519,21.6116116 47.6046512,21.7117117 C47.7015504,21.8118118 47.7596899,21.8518519 47.7790698,21.8318318 L47.7790698,37.3573574 Z')\n            .attr('fill', '#000')\n            .attr('fill-rule', '#nonzero')\n            .attr('stroke', 'black')\n            .attr('stroke-width', '1')\n            .attr('transform', 'translate(49.000000, 30.000000) scale(1, -1) translate(-49.000000, -30.000000)');\n        symbol.append('path')\n            .attr('d', 'M18.5356068,34 C18.9849549,34 19.7873621,33.9839243 20.9428285,33.951773 C22.0982949,33.9196217 23.1735206,33.8874704 24.1685055,33.8553191 C25.8054162,33.8553191 27.1695085,33.8713948 28.2607823,33.9035461 C29.3520562,33.9356974 29.9779338,33.951773 30.1384152,33.951773 C30.7161484,33.951773 31.005015,33.8231678 31.005015,33.5659574 C31.005015,33.4373522 30.9568706,33.1962175 30.8605817,32.8425532 C30.7001003,32.2638298 30.555667,31.9423168 30.4272818,31.8780142 C30.2988967,31.8137116 29.9458375,31.7815603 29.3681043,31.7815603 C28.5656971,31.749409 27.9237713,31.6690307 27.442327,31.5404255 C26.9608826,31.4118203 26.6238716,31.2832151 26.4312939,31.1546099 C26.2387161,31.0260047 26.1905717,30.8813239 26.2868606,30.7205674 C26.2868606,30.3347518 26.5436309,26.508747 27.0571715,19.2425532 C27.5707121,11.9763593 27.8274824,8.13427896 27.8274824,7.71631206 L27.9237713,7.86099291 C27.9879639,7.95744681 28.0842528,8.11820331 28.2126379,8.34326241 C28.3410231,8.56832151 28.5336008,8.87375887 28.7903711,9.25957447 C29.0471414,9.64539007 29.3199599,10.1276596 29.6088265,10.706383 C29.8976931,11.2851064 30.2828485,11.944208 30.7642929,12.6836879 C31.2457372,13.4231678 31.7271815,14.291253 32.2086259,15.2879433 C32.6900702,16.2846336 33.3159478,17.3617021 34.0862588,18.5191489 C37.4242728,24.4349882 39.3179539,27.8108747 39.7673019,28.6468085 C40.2166499,29.4827423 40.4573721,29.9971631 40.4894684,30.1900709 C40.4894684,30.6723404 40.1845537,31.058156 39.5747242,31.3475177 C38.9648947,31.6368794 38.2908726,31.7815603 37.552658,31.7815603 C37.1033099,31.7815603 36.8786359,31.9423168 36.8786359,32.2638298 C36.8786359,32.3602837 36.9107322,32.5692671 36.9749248,32.8907801 C37.1033099,33.4052009 37.1995988,33.7106383 37.2637914,33.8070922 C37.327984,33.9035461 37.552658,33.951773 37.9378134,33.951773 C38.0341023,33.951773 38.3069208,33.951773 38.7562688,33.951773 C39.2056169,33.951773 39.8314945,33.951773 40.6339017,33.951773 C41.4363089,33.951773 42.3029087,33.9356974 43.2337011,33.9035461 C45.3520562,33.9035461 46.7161484,33.9356974 47.3259779,34 C47.775326,34 48,33.8231678 48,33.4695035 C48,33.2765957 47.9518556,33.0033097 47.8555667,32.6496454 C47.7592778,32.2959811 47.6469408,32.0548463 47.5185557,31.9262411 C47.3901705,31.7976359 47.2296891,31.749409 47.0371113,31.7815603 C46.330993,31.7815603 45.6890672,31.6851064 45.111334,31.4921986 C44.5336008,31.2992908 44.0521565,31.0742317 43.667001,30.8170213 C43.2818455,30.5598109 42.9769308,30.2865248 42.7522568,29.9971631 C42.5275827,29.7078014 42.335005,29.450591 42.1745236,29.2255319 L41.9819458,28.9361702 L33.8455366,14.6609929 C28.4533601,5.14420804 25.7412237,0.369739953 25.7091274,0.337588652 C25.5165496,0.112529551 25.1313942,0 24.553661,0 C24.0722166,0 23.7673019,0.0803782506 23.6389168,0.241134752 C23.5426279,0.337588652 23.2377131,4.29219858 22.7241725,12.1049645 C22.2106319,19.9177305 21.9378134,23.9527187 21.9057172,24.2099291 L21.327984,23.341844 C20.6218656,22.1522459 18.5677031,18.5673759 15.1654965,12.587234 C10.5436309,4.48510638 8.20060181,0.401891253 8.13640923,0.337588652 C8.07221665,0.273286052 7.99197593,0.208983452 7.89568706,0.144680851 C7.73520562,0.0482269504 7.44633902,0 7.02908726,0 C6.41925777,0 6.08224674,0.112529551 6.01805416,0.337588652 C6.01805416,0.434042553 5.66499498,5.56217494 4.95887663,15.7219858 C4.25275827,25.8817967 3.88365095,30.9938534 3.85155466,31.058156 C3.78736209,31.3475177 3.62688064,31.5243499 3.37011033,31.5886525 C3.11334002,31.6529551 2.48746239,31.7172577 1.49247743,31.7815603 L0.337011033,31.7815603 C0.112337011,32.0066194 0,32.1834515 0,32.3120567 C0.0320962889,33.0515366 0.240722166,33.6141844 0.625877633,34 L1.20361083,34 C2.55165496,33.9035461 4.15646941,33.8553191 6.01805416,33.8553191 C10.0300903,33.8553191 12.2286861,33.9035461 12.6138415,34 L13.0952859,34 C13.2878636,33.8070922 13.3841525,33.6624113 13.3841525,33.5659574 C13.3841525,33.4695035 13.3520562,33.1801418 13.2878636,32.6978723 C13.1273821,32.2156028 12.9829488,31.9101655 12.8545637,31.7815603 L11.8435306,31.7815603 C9.88565697,31.6851064 8.84252758,31.4118203 8.71414243,30.9617021 C9.67703109,16.172104 10.222668,8.39148936 10.3510532,7.61985816 L21.664995,27.5858156 L21.5687061,29.3702128 C21.4724173,30.7205674 21.3119358,31.4439716 21.0872618,31.5404255 C20.8946841,31.6690307 20.220662,31.749409 19.0651956,31.7815603 C18.4553661,31.7815603 18.0541625,31.8137116 17.8615848,31.8780142 C17.669007,31.9423168 17.5727182,32.0869976 17.5727182,32.3120567 C17.5727182,32.3763593 17.6048144,32.5692671 17.669007,32.8907801 C17.7011033,33.0193853 17.7331996,33.1640662 17.7652959,33.3248227 C17.7973922,33.4855792 17.8134403,33.5981087 17.8134403,33.6624113 C17.8134403,33.7267139 17.8615848,33.7910165 17.9578736,33.8553191 C18.0541625,33.9196217 18.1183551,33.951773 18.1504514,33.951773 C18.1825476,33.951773 18.3109328,33.9678487 18.5356068,34 Z')\n            .attr('fill', '#000')\n            .attr('fill-rule', '#nonzero')\n            .attr('stroke', 'black')\n            .attr('stroke-width', '1')\n            .attr('transform', 'translate(24.000000, 17.000000) scale(1, -1) translate(-24.000000, -17.000000) ');\n        if (delay) {\n            symbol.transition()\n                .delay(delay)\n                .duration(1000)\n                .style('opacity', .9);\n        }\n        return symbol;\n    },\n    outputO2: (svg, x, y, delay) => {},\n};","import React, {Component} from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server'\nimport {withStyles} from '@material-ui/core/styles';\nimport './Trainig.css';\nimport StepperNN from './StepperNN';\nimport Typography from \"@material-ui/core/es/Typography/Typography\";\nimport Modal from '@material-ui/core/Modal';\nimport symbol from './symbolSVG';\nconst { Provider, Node } = require(\"@nteract/mathjax\");\nconst d3 = require('d3');\n\nconst styles = theme => ({\n    root: {\n        width: 300,\n    },\n    slider: {\n        padding: '22px 0px',\n    },\n    thumbIcon: {\n        borderRadius: '50%',\n    },\n    thumbIconWrapper: {\n        backgroundColor: '#fff',\n        width: 'auto',\n        height: 'auto  '\n    },\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing.unit * 4,\n        outline: 'none',\n    },\n});\n\nclass Training extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            oneInArr: [0,0,1,0,1,1,1,0,1,0,0,1,0,0,1],\n            counter: 0,\n            width: 1280,\n            height: 645,\n            radius: 18,\n            widthOfCell: 20,\n            heightOfCell: 20,\n            widthOfDesr: 35,\n            numberOfInputNeuron: 15,\n            numberOfOutputNeuron: 9,\n            numberOfNeuronInHiddenLayer: 9,\n            hiddenLayers: 1,\n            selectedStep: 0,\n            descrFormulaOne: String.raw`\\overrightarrow{O}`,\n            descrFormulaTwo: String.raw`W_1`,\n            currentStepFormula: this.getStepContent(0),\n            currentDescription: this.getStepDescription(0),\n            currentStep: 0,\n            matrixSvgOne: null,\n            matrixSvgTwo: null,\n            isModalOpen: false\n        };\n    }\n\n    componentDidMount(props, state, root) {\n        const svg = d3.select(this.viz);\n        const svgGraph = svg\n            .append('svg')\n            .attr('y', -15);\n        const matrixSvg = svg.append('svg')\n            .attr('x', 20)\n            .attr('y', 20);\n        const svgInput = svg.append('svg');\n        //this.drawFirstMatrix(matrixSvg);\n        this.setState({svg, svgGraph, matrixSvg, svgInput});\n        this.updateChart(svgGraph);\n        this.setStep(0, matrixSvg, svgGraph, svgInput);\n    }\n\n    // componentDidUpdate(prevProps, prevState) {\n    //     //this.updateChart(null, this.state.svgGraph);\n    //     if (!!prevState.matrixSvg) {\n    //         this.setStep(0);\n    //     }\n    // }\n\n    getStepDescription = (step) => {\n        switch (step) {\n            case 0:\n                return {\n                    head: 'Welcome to visualisation of Neural network algorithm',\n                    body: (<div>\n                        <p>\n                            {'The neural network consists of neurons and connections between neurons. Neurons are here nodes. ' +\n                            'Connection are edges. As input we become some features about the given object. Output can show us to which group this object belongs (if aim of NN is classification).'}\n                        </p>\n                        <p>\n                            {'The most popular problem that has been tried to be solved with Neural Network(NN) is classification, ' +\n                            'for example classification of handwritten numbers. ' +\n                            'At the initial phase we take the input data and prepare this for the algorithm of NN and ' +\n                            'generate the weights for each data element randomly between 0 and 1.'}\n                        </p>\n                        <p>\n                            {'We\\'ll show you how the NN algorithm will work on example of recognition of number 1' +\n                            ' As features we take here every pixels of image and transform this to the range between 0 and 1.'}\n                        </p>\n                        <p>\n                            {'Here we show you the first part - training'}\n                        </p>\n                    </div>)\n\n                };\n            case 1:\n                return {\n                    head: 'Multiple input with weight',\n                    body: (<div>\n                        <p>\n                            {'The first step of algorithm show the multiply of the input(Vector O) with the weights(W) and take the sigmoid function of this.'}\n                        </p>\n                        <p>\n                            {'- vector and matrix multiplication'}\n                        </p>\n                        <p>\n                            {'- take a sigmoid fucntion of result'}\n                        </p>\n                    </div>)\n\n                };\n            case 2:\n                return {\n                    head: 'Multiple output  with weight',\n                    body: (<div>\n                        <p>\n                            {'The result of the step before we take as input for this step.'}\n                        </p>\n                        <p>\n                            {'- vector and matrix multiplication'}\n                        </p>\n                        <p>\n                            {'- take a sigmoid fucntion of result'}\n                        </p>\n                    </div>)\n\n                };\n            case 3:\n                return {\n                    head: 'Deviation of error',\n                    body: (<div>\n                        <p>\n                            {'By this step wir become already the output of NN. And by training phase is here most important place.'}\n                        </p>\n                        <p>\n                            {'We expect that NN give us possibility, which number we take to process. ' +\n                            'Cause the network didn\\'t learn the numbers. It give us the wrong result. ' +\n                            'Now we calculate the errors, how far we are from correct result and use this to adjust over weights.'}\n                        </p>\n                        <p>\n                            {'-  subtraction of NN the result  and expected output(t)'}\n                        </p>\n                    </div>)\n\n                };\n            case 4:\n                return {\n                    head: 'Welcome to visualisation of Neural network algorithm',\n                    body: (<div>\n                        <p>\n                            {''}\n                        </p>\n                    </div>)\n\n                };\n            case 5:\n                return {\n                    head: 'Welcome to visualisation of Neural network algorithm',\n                    body: (<div>\n                        <p>\n                            {''}\n                        </p>\n                    </div>)\n\n                };\n            case 6:\n                return {\n                    head: 'Welcome to visualisation of Neural network algorithm',\n                    body: (<div>\n                        <p>\n                            {''}\n                        </p>\n                    </div>)\n\n                };\n            case 7:\n                return {\n                    head: 'Welcome to visualisation of Neural network algorithm',\n                    body: (<div>\n                        <p>\n                            {''}\n                        </p>\n                    </div>)\n\n                };\n            case 8:\n                return {\n                    head: 'Welcome to visualisation of Neural network algorithm',\n                    body: (<div>\n                        <p>\n                            {''}\n                        </p>\n                    </div>)\n\n                };\n            case 9:\n                return {\n                    head: 'Correction coefficient 1',\n                    body: (<div>\n                        <p>\n                            {''}\n                        </p>\n                    </div>)\n\n                };\n            case 10:\n                return {\n                    head: 'Correction coefficient 2',\n                    body: (<div>\n                        <p>\n                            {''}\n                        </p>\n                    </div>)\n\n                };\n            case 11:\n                return {\n                    head: 'One cycle of training completed',\n                    body: (<div>\n                        <p>\n                            {'After the processing of one picture/data element is completed, algorithm take the next data and' +\n                            ' start the same process again.'}\n                        </p>\n                    </div>)\n\n                };\n            default:\n                return 'Algo take the next Data and start again.';\n        }\n    };\n\n    getStepContent = (step) => {\n        switch (step) {\n            case 0:\n                return '';\n            case 1:\n                return String.raw`\\overrightarrow{O^1} = S(\\overrightarrow{O}, W_1)`;\n            case 2:\n                return String.raw`\\overrightarrow{O^2} = S(\\overrightarrow{O^1}, W_2)`;\n            case 3:\n                return String.raw`\\overrightarrow{e} = \\begin{pmatrix} O^2_1 - t_1 \\\\ O^2_2 - t_2 \\\\ \\vdots \\\\ O^2_m - t_m \\\\ \\end{pmatrix}`;\n            case 4:\n                return String.raw`E = \\frac{1}{2}\\{(O^2_1 - t_1)^2 + (O^2_2 - t_2)^2 + ... +(O^2_m - t_m)^2\\}`;\n            case 5:\n                return String.raw`D_2 = \\begin{pmatrix} O^2_1(1 - O^2_1) & \\cdots & \\cdots \\\\ \\cdots & O^2_2(1 - O^2_2) & \\cdots \\\\ \\cdots & \\cdots & O^2_m(1 - O^2_m)\\\\ \\end{pmatrix}`;\n            case 6:\n                return String.raw`D_1 = \\begin{pmatrix} O^1_1(1 - O^1_1) & \\cdots & \\cdots \\\\ \\cdots & O^1_2(1 - O^2_2) & \\cdots \\\\ \\cdots & \\cdots & O^1_k(1 - O^1_k)\\\\ \\end{pmatrix}`;\n            case 7:\n                return String.raw`\\overrightarrow{\\delta^2} = D_2 * \\overrightarrow{e}`;\n            case 8:\n                return String.raw`\\overrightarrow{\\delta^1} = D_1 * W_2 * \\overrightarrow{e}`;\n            case 9:\n                return String.raw`\\overrightarrow{\\Delta w_2^T} = - \\gamma * \\overrightarrow{\\delta^2}`;\n            case 10:\n                return String.raw`\\overrightarrow{\\Delta w_1^T} = - \\gamma * \\overrightarrow{\\delta^1}`;\n            case 11:\n                return '';\n            default:\n                return '';\n        }\n    };\n\n    getStepFormulaDescription = (step) => {\n        switch (step) {\n            case 0:\n                return {\n                    descrFormulaOne: String.raw`\\overrightarrow{O}`,\n                    descrFormulaTwo: String.raw`W_1`\n                };\n            case 1:\n                return {\n                    descrFormulaOne: String.raw`\\overrightarrow{O}`,\n                    descrFormulaTwo: String.raw`W_1`\n                };\n            case 2:\n                return {\n                    descrFormulaOne: String.raw`\\overrightarrow{O^2}`,\n                    descrFormulaTwo: String.raw`W_2`\n                };\n            case 3:\n                return String.raw`\\overrightarrow{e} = \\begin{pmatrix} O^2_1 - t_1 \\\\ O^2_2 - t_2 \\\\ \\vdots \\\\ O^2_m - t_m \\\\ \\end{pmatrix}`;\n            case 4:\n                return String.raw`E = \\frac{1}{2}\\{(O^2_1 - t_1)^2 + (O^2_2 - t_2)^2 + ... +(O^2_m - t_m)^2\\}`;\n            case 5:\n                return String.raw`D_2 = \\begin{pmatrix} O^2_1(1 - O^2_1) & \\cdots & \\cdots \\\\ \\cdots & O^2_2(1 - O^2_2) & \\cdots \\\\ \\cdots & \\cdots & O^2_m(1 - O^2_m)\\\\ \\end{pmatrix}`;\n            case 6:\n                return String.raw`D_1 = \\begin{pmatrix} O^1_1(1 - O^1_1) & \\cdots & \\cdots \\\\ \\cdots & O^1_2(1 - O^2_2) & \\cdots \\\\ \\cdots & \\cdots & O^1_k(1 - O^1_k)\\\\ \\end{pmatrix}`;\n            case 7:\n                return String.raw`\\overrightarrow{\\delta^2} = D_2 * \\overrightarrow{e}`;\n            case 8:\n                return String.raw`\\overrightarrow{\\delta^1} = D_1 * W_2 * \\overrightarrow{e}`;\n            case 9:\n                return String.raw`\\overrightarrow{\\Delta w_2^T} = - \\gamma * \\overrightarrow{\\delta^2}`;\n            case 10:\n                return String.raw`\\overrightarrow{\\Delta w_1^T} = - \\gamma * \\overrightarrow{\\delta^1}`;\n            case 11:\n                return '';\n            default:\n                return '';\n        }\n    }\n\n    updateLeftView = (step, matrixSvg, svgGraph, svgInput) => {\n        const sizeOfPicture = {h:5, w:3};\n        const {widthOfCell, heightOfCell} = this.state;\n        switch (step) {\n            case 0: {\n                const numberOfrows = this.state.numberOfInputNeuron;\n                const data = this.prepareMatrixData(sizeOfPicture.h, sizeOfPicture.w, this.state.oneInArr); //TODO use constant\n                const dataFirstMatrix = this.prepareMatrixData(numberOfrows, 1, this.state.oneInArr);\n                const y = this.state.widthOfDesr;\n                const coordX = 28;\n                const coordY = 50;\n                if (!!this.state.svgInput) {\n                    this.moveSvgInputBack(svgInput);\n                } else {\n                    this.drawOneDescr(svgInput, coordX + 20, coordY + 20, sizeOfPicture.w * widthOfCell, heightOfCell); // 20 - because separate svg-father\n                    this.drawOne(svgInput, data, coordX + 20, coordY + 20, 500); // 20 - because separate svg-father\n                }\n\n                this.drawArrowDown(matrixSvg, coordX + (sizeOfPicture.w * widthOfCell / 2), coordY + (sizeOfPicture.h + 1) * heightOfCell, 1500);\n                this.drawOneAsMatrix(matrixSvg, data, coordX, coordY + sizeOfPicture.h*heightOfCell + 50, 2500);\n                this.drawArrowRight(matrixSvg, coordX + (sizeOfPicture.w+1) * widthOfCell, coordY + sizeOfPicture.h*heightOfCell + 50 +\n                    (heightOfCell * sizeOfPicture.h/2), 3500);\n                this.drawFirstMatrix(matrixSvg, dataFirstMatrix, coordX + (sizeOfPicture.w+1)*widthOfCell + 125, y, 4500);\n                this.drawArrowRight(matrixSvg, 200 + coordX + (sizeOfPicture.w+1) * widthOfCell, coordY + sizeOfPicture.h*heightOfCell + 50 +\n                    (heightOfCell * sizeOfPicture.h/2), 5500); // = 200 - is not calculated\n                this.updateChart(svgGraph, this.state.oneInArr, 6500);\n                this.setState({dataFirstMatrix});\n                return;\n            }\n            case 1: {\n                const coordX = 28;\n                const coordY = 50;\n                const {widthOfCell, heightOfCell, dataFirstMatrix} = this.state;\n                const yPosition = svgInput.attr('y');\n                this.moveSvgInput(svgInput, coordX + 20, coordY + 2, sizeOfPicture, widthOfCell, 200);\n                this.drawFirstMatrix(matrixSvg, dataFirstMatrix, 28, 60, yPosition > 0 ? 200 : 1200);\n                this.drawSecondMatrix(matrixSvg, null, 128, 60, 2500);\n                return;\n            }\n            case 2: {\n                const {dataFirstMatrix} = this.state;\n                const yPosition = svgInput.attr('y');\n                this.drawFirstMatrix(matrixSvg, dataFirstMatrix, 28, 60, yPosition > 0 ? 200 : 1200);\n                this.drawSecondMatrix(matrixSvg, null, 128, 60, 2500);\n                return;\n            }\n            case 3: {\n                this.drawFirstMatrix(matrixSvg);\n                this.drawSecondMatrix(matrixSvg);\n                return;\n            }\n            default:\n                return;\n        }\n    };\n\n    setStep = (currentStep, svgNew, svgGraphNew, svgInputNew) => {\n        const currentStepFormula = this.getStepContent(currentStep);\n        const currentDescription = this.getStepDescription(currentStep);\n        const {descrFormulaOne, descrFormulaTwo} = this.getStepFormulaDescription(currentStep);\n        this.setState({\n            currentStepFormula,\n            currentDescription,\n            currentStep,\n            descrFormulaOne: descrFormulaOne,\n            descrFormulaTwo: descrFormulaTwo\n        });\n\n        const matrixSvg = !!svgNew ? svgNew : this.state.matrixSvg;\n        const svgGraph = !!svgGraphNew ? svgGraphNew : this.state.svgGraph;\n        const svgInput = !!svgInputNew ? svgInputNew : this.state.svgInput;\n        //TODO move this to switch\n        // before remove all move picture to the right\n        if (!!matrixSvg) {\n            matrixSvg.selectAll(\"*\").remove();\n        } else {\n            return;\n        }\n        this.updateLeftView(currentStep, matrixSvg, svgGraph, svgInput);\n    };\n\n    updateChart = (svgNew, inputData, delay) => {\n        // Define the div for the tooltip\n        const mschubY = 40;\n        const schubX = 300;\n        const firstXCoordinate = 450;\n        const svgGraphWithSymbols = svgNew; //???\n        let ipnutData = [];\n        let outputData = [];\n        let hiddenLayerData = [];\n        if (!!svgGraphWithSymbols) {\n            svgGraphWithSymbols.selectAll(\"*\").remove();\n        } else {\n            return;\n        }\n\n        const svgGraph = svgGraphWithSymbols\n            .append('svg')\n            .attr('x', 0)\n            .attr('y', 25);\n\n        const svgSymbolsPanel = svgGraphWithSymbols.append('svg');\n        //Daten vorbereiten\n        for (let i = 1; i <= this.state.numberOfInputNeuron; i++) {\n            ipnutData.push({\n                x: firstXCoordinate,\n                y: i * mschubY,\n                neuronValue: inputData ? inputData[i-1] : null\n            })\n        }\n        for (let i = 1; i <= this.state.numberOfOutputNeuron; i++) {\n            outputData.push({\n                x: firstXCoordinate + ((this.state.hiddenLayers + 1) * schubX),\n                y: i * mschubY,\n                neuronValue: 0\n            })\n        }\n        hiddenLayerData.push(ipnutData);\n        for (let i = 1; i <= this.state.hiddenLayers; i++) {\n            const currentLayer = [];\n            for (let j = 1; j <= this.state.numberOfInputNeuron; j++) {\n                currentLayer.push({\n                    x: firstXCoordinate + (i * schubX),\n                    y: j * mschubY,\n                    neuronValue: 0\n                })\n            }\n            hiddenLayerData.push(currentLayer);\n        }\n        hiddenLayerData.push(outputData);\n\n        symbol.inputO(svgSymbolsPanel, firstXCoordinate - 8, 0);\n        symbol.outputW1(svgSymbolsPanel, firstXCoordinate + (this.state.hiddenLayers * schubX) / 2 - 10, 0);\n\n        //draw the tooltip\n        const div = d3.select(this.refVis).append('div')\n            .attr('class', 'tooltip')\n            .style('opacity', 0);\n\n        //draw the circles\n        hiddenLayerData.forEach((currentLayer, layerIndex) => {\n            svgGraph.append('g')\n                .selectAll('circle')\n                .data(currentLayer)\n                .enter()\n                .append('circle')\n                .attr('r', this.state.radius)\n                .attr('cx', d => d.x)\n                .attr('cy', d => d.y)\n                .attr('stroke', 'black')\n                .style(\"stroke-width\", 2)\n                // .style(\"stroke-opacity\", 1)\n                .style('fill', '#FFF') //TODO !!!!!!!!\n                //.style('fill', '#47BA36') //TODO !!!!!!!!\n                .on('mouseover', d => {\n                    div.transition()\n                        .duration(200)\n                        .style('opacity', .9);\n                    div.html('Layer' + layerIndex + '<br/>' + d.neuronValue)\n                        .style('left', (d3.event.pageX + 10) + 'px')\n                        .style('top', (d3.event.pageY - 18) + 'px');\n                }).on('mouseout', d => {\n                    div.transition()\n                        .duration(500)\n                        .style('opacity', 0);\n                }).transition()\n                .delay(delay ? delay : 0)\n                .duration(delay ? 2500 : 0)\n                .style('fill', d => d.neuronValue ? '#47BA36' : '#FFF');\n        });\n\n        //draw the lines\n        hiddenLayerData.forEach((currentLayer, layerIndex) => {\n            if (layerIndex == 0) {\n                return;\n            }\n            const accessorLayer = hiddenLayerData[layerIndex - 1];\n            // take data of weights  from accessorLayer\n            //\n            const outspace = 3;\n            accessorLayer.forEach(accessor => {\n                svgGraph.append('g')\n                    .selectAll('line')\n                    .data(currentLayer)\n                    .enter()\n                    .append('line')\n                    .attr('stroke', '#b9baba')\n                    .attr('stroke-width', '2.5')\n                    .attr('x1', (d, index) => accessor.x + this.state.radius + outspace)\n                    .attr('y1', (d, index) => accessor.y)\n                    .attr('x2', d => d.x - this.state.radius - outspace)\n                    .attr('y2', d => d.y)\n\n            });\n        });\n    };\n\n    prepareMatrixData = (matrixRows, matrixColumns, inputData) => {\n        //TODO inputData - is vector or matrix\n        const data = [];\n        let xpos = 1; //starting xpos and ypos at 1 so the stroke will show when we make the grid below\n        let ypos = 1;\n        const width = this.state.widthOfCell;\n        const height = this.state.heightOfCell;\n        const click = 0;\n        let index = 0;\n        // iterate for rows\n        for (let row = 0; row < matrixRows; row++) {\n            data.push([]);\n\n            // iterate for cells/columns inside rows\n            for (let column = 0; column < matrixColumns; column++) {\n                data[row].push({\n                    x: xpos,\n                    y: ypos,\n                    width: width,\n                    height: height,\n                    click: click,\n                    value: inputData ? inputData[index] : 0.1\n                });\n                // increment the x position. I.e. move it over by 50 (width variable)\n                index ++;\n                xpos += width;\n            }\n            // reset the x position after a row is complete\n            xpos = 1;\n            // increment the y position for the next row. Move it down 50 (height variable)\n            ypos += height;\n        }\n        return data;\n    };\n\n    drawRoundBracket = (svg, x1, y1, x2, y2, dy) => {\n        svg.append('path')\n            .attr('d', 'M ' + x1 +', '+ y1 + ' C ' + (x1-30) + ',' + (y1 + dy/3) + ' ' + (x1-30) + ',' + (y1 + dy*2/3)  + ' ' + x1 + ',' + (y1+dy)\n                + ' M ' + x1 +', '+ y1 + ' C ' + (x1-30) + ',' + (y1 + dy/3) + ' ' + (x1-30) + ',' + (y1 + dy*2/3)  + ' ' + x1 + ',' + (y1+dy))\n            .attr('stroke', 'black')\n            .attr('stroke-width', '2')\n            .attr('fill', 'none');\n        svg.append('path')\n            .attr('d', 'M ' + x2 +' '+ y2 + ' C ' + (x2+30) + ',' + (y2 + dy/3) + ' ' + (x2+30) + ',' + (y2 + dy*2/3)  + ' ' + x2 + ',' + (y2+dy)\n                + ' M ' + x2 +' '+ y2 + ' C ' + (x2+30) + ',' + (y2 + dy/3) + ' ' + (x2+30) + ',' + (y2 + dy*2/3)  + ' ' + x2 + ',' + (y2+dy))\n            .attr('stroke', 'black')\n            .attr('stroke-width', '2')\n            .attr('fill', 'none');\n    };\n\n    drawKreuz = (svg, x, y) => {\n        svg.append('svg')\n            .attr('x', x - 10) //from size of kreuz\n            .attr('y', y - 20)\n            .append('path')\n            .attr('d', 'M20,0 L0,40 M0,0 L20,40')\n            .attr('stroke', 'black')\n            .attr('stroke-width', '2');\n    };\n\n    drawMatrixDescr = (svg, x, y, width, refVisTemp, withoutArrow) => {\n        const svgTemp = d3.select(refVisTemp).html(); //TODO take only svg\n        const halfWidth = width / 2;\n        const widthOfDescr = 9; //TODO take this from selector\n        svg.append(\"svg\")\n            .attr('x', x + halfWidth - widthOfDescr)\n            .attr('y', withoutArrow ? y - 25 : y - 35)\n            .attr(\"width\", 35)\n            .attr(\"height\", 35)\n            .append(\"foreignObject\").attr(\"width\",35).attr(\"height\",35)\n            .html(svgTemp)\n        ;\n    };\n\n    drawFirstMatrix = (matrixSvg, matrixData, x_coord, y_coord, delay) => {\n        const newMatrixSvg =  matrixSvg.append('svg')\n            .attr('x', 0)  //28\n            .attr('y', 0)\n            .style('opacity', !!delay ? .0 : 1);\n        const x = x_coord ? x_coord: 28;\n        const y = y_coord ? y_coord + 60: 60;\n        const numberOfrows = this.state.numberOfInputNeuron;\n        const width = this.state.widthOfCell;\n        const data = matrixData ? matrixData : this.prepareMatrixData(numberOfrows, 1); //TODO\n        this.drawRoundBracket(newMatrixSvg, x, y-10, x + width, y-10, width*(numberOfrows+1));\n        //this.drawMatrixDescr(newMatrixSvg, x, y, width, this.refVisTempOne);\n        symbol.inputO(newMatrixSvg, x + 2, y - 60);\n        const matrixSvgOne = this.drawMatrix(newMatrixSvg, data, x, y);\n        this.setState({matrixSvgOne});\n\n        newMatrixSvg.transition()\n            .delay(delay)\n            .duration(1000)\n            .style('opacity', .9);\n    };\n\n    drawSecondMatrix = (matrixSvg,  matrixData, x_coord, y_coord, delay) => {\n        const newMatrixSvg =  matrixSvg.append('svg')\n            .attr('x', 0)  //28\n            .attr('y', 0)\n            .style('opacity', !!delay ? .0 : 1);\n        const x = x_coord ? x_coord: 128;\n        const y = y_coord ? y_coord + 60: 60;\n        const width = this.state.widthOfCell;\n        const heightOfCell = this.state.heightOfCell;\n        const numberOfInputNeuron = this.state.numberOfInputNeuron;\n        const numberOfNeuronInHiddenLayer = this.state.numberOfNeuronInHiddenLayer;\n        const data = matrixData ? matrixData : this.prepareMatrixData(numberOfInputNeuron, numberOfNeuronInHiddenLayer);\n        this.drawKreuz(newMatrixSvg, 28 + width + (128 - (28 + width))/2, y + numberOfInputNeuron*heightOfCell / 2);\n        this.drawRoundBracket(newMatrixSvg, x, y-10, x + (width*numberOfNeuronInHiddenLayer), y-10, heightOfCell * (numberOfInputNeuron + 1));\n        //this.drawMatrixDescr(newMatrixSvg, x, y, (width*numberOfNeuronInHiddenLayer), this.refVisTempTwo, true);\n        symbol.outputW1(newMatrixSvg, x + width*numberOfNeuronInHiddenLayer/2 - 10, y - 50);\n        const matrixSvgTwo = this.drawMatrix(newMatrixSvg, data, x, y);\n        this.setState({matrixSvgTwo});\n\n        newMatrixSvg.transition()\n            .delay(delay)\n            .duration(1000)\n            .style('opacity', .9);\n    };\n\n    drawMatrix = (matrixSvg, data, x, y) => {\n        const newMatrixSvg =  matrixSvg.append('svg')\n            .attr('x', x)  //28\n            .attr('y', y);   //10\n        const row = newMatrixSvg.selectAll('.row')\n            .data(data)\n            .enter().append('g')\n            .attr('class', 'row');\n\n        const cell = row.selectAll('.cell')\n            .data(d => d)\n            .enter().append('g')\n            .attr('class', 'cell');\n\n        cell.append('rect')\n            .attr('class', 'square')\n            .attr('x', d => d.x)\n            .attr('y', d => d.y)\n            .attr('width', d => d.width)\n            .attr('height', d => d.height)\n            .style('fill', '#fff')\n            // .style('opacity', '0.1')\n            //.style('stroke', '#222')\n            // .style(\"stroke-opacity\", .9)\n            .on('click', function (d) {\n                d.click++;\n                if ((d.click) % 4 === 0) {\n                    d3.select(this).style('fill', '#fff');\n                }\n                if ((d.click) % 4 === 1) {\n                    d3.select(this).style('fill', '#2C93E8');\n                }\n                if ((d.click) % 4 === 2) {\n                    d3.select(this).style('fill', '#F56C4E');\n                }\n                if ((d.click) % 4 === 3) {\n                    d3.select(this).style('fill', '#838690');\n                }\n            });\n\n        cell.append('svg')\n            .attr('x', d => d.x)\n            .attr('y', d => d.y)\n            .attr('width', d => d.width)\n            .attr('height', d => d.height)\n            .append('text').text(d => d.value)\n            .attr('x', '50%')\n            .attr('y', '50%')\n            .attr('alignment-baseline', 'middle')\n            .attr('text-anchor', 'middle')\n            .attr(\"font-family\", \"sans-serif\")\n            .attr(\"font-size\", \"12px\");\n        return newMatrixSvg;\n    };\n\n    drawOneDescr = (matrixSvg, x, y, width, height) => {\n        const newMatrixSvg =  matrixSvg.append('svg')\n            .attr('x', x - 10)\n            .attr('y', y - height)\n            .attr('height', 30)\n            .attr('width', 200)\n            .append('text')\n            .text('Input image')\n            .attr('x', 0)\n            .attr('y', 15)\n            .style('fill', '#000');\n\n        return newMatrixSvg;\n    };\n\n    drawOne = (matrixSvg, data, x, y, delay) => {\n        const newMatrixSvg =  matrixSvg.append('svg')\n            .attr('x', x)  //28\n            .attr('y', y)\n            .style('opacity', .0);\n        const row = newMatrixSvg.selectAll('.row')\n            .data(data)\n            .enter().append('g')\n            .attr('class', 'row');\n\n        const cell = row.selectAll('.cell')\n            .data(d => d)\n            .enter().append('g')\n            .attr('class', 'cell');\n\n        cell.append('rect')\n            .attr('class', 'square')\n            .attr('x', d => d.x)\n            .attr('y', d => d.y)\n            .attr('width', d => d.width)\n            .attr('height', d => d.height)\n            .style('stroke', '#000000')\n            .style('fill', d =>  d.value === 1 ? '#47BA36' : '#fff');\n\n        newMatrixSvg.transition()\n            .delay(delay)\n            .duration(1000)\n            .style('opacity', .9);\n\n        return newMatrixSvg;\n    };\n\n    drawOneAsMatrix = (matrixSvg, data, x, y, delay) => {\n        const newMatrixSvg =  matrixSvg.append('svg')\n            .attr('x', x)  //28\n            .attr('y', y)\n            .style('opacity', .0);\n        const row = newMatrixSvg.selectAll('.row')\n            .data(data)\n            .enter().append('g')\n            .attr('class', 'row');\n\n        const cell = row.selectAll('.cell')\n            .data(d => d)\n            .enter().append('g')\n            .attr('class', 'cell');\n\n        cell.append('svg')\n            .attr('x', d => d.x)\n            .attr('y', d => d.y)\n            .attr('width', d => d.width)\n            .attr('height', d => d.height)\n            .append('text').text(d => d.value)\n            .attr('x', '50%')\n            .attr('y', '50%')\n            .attr('alignment-baseline', 'middle')\n            .attr('text-anchor', 'middle')\n            .attr(\"font-family\", \"sans-serif\")\n            .attr(\"font-size\", \"12px\")\n            .style('fill', d =>  d.value === 1 ? '#47BA36' : '#979797');\n\n        newMatrixSvg.transition()\n            .delay(delay)\n            .duration(1000)\n            .style('opacity', .9);\n\n        return newMatrixSvg;\n    };\n\n    drawArrowDown = (svg, x, y, delay) => {\n        const arrow = svg.append('svg')\n            .attr('x', x - 5)\n            .attr('y', y - 15)\n            .style('opacity', .0);\n            // .attr('width', 10)\n            // .attr('height', 42)\n        arrow.append('path')\n            .attr('d', 'M4.5,32.5 L4.5,1 L4.5,0.5 L5.5,0.5 L5.5,1 L5.5,32.5 L9.5,32.5 L5,41.5 L0.5,32.5 L4.5,32.5 Z')\n            .attr('fill', '#979797')\n            .attr('fill-rule', '#nonzero')\n            .attr('stroke', 'black')\n            .attr('stroke-width', '1');\n\n        arrow.transition()\n            .delay(delay)\n            .duration(1000)\n            .style('opacity', .9);\n    };\n\n    drawArrowRight = (svg, x, y, delay) => {\n        const arrow = svg.append('svg')\n            .attr('x', x + 15)\n            .attr('y', y - 5)\n            .style('opacity', .0);\n            // .attr('width', 10)\n            // .attr('height', 42)\n        arrow.append('path')\n            .attr('d', 'M32.5,5.5 L1,5.5 L0.5,5.5 L0.5,4.5 L1,4.5 L32.5,4.5 L32.5,0.5 L41.5,5 L32.5,9.5 L32.5,5.5 Z')\n            .attr('fill', '#979797')\n            .attr('fill-rule', '#nonzero')\n            .attr('stroke', 'black')\n            .attr('stroke-width', '1');\n        arrow.transition()\n            .delay(delay)\n            .duration(1000)\n            .style('opacity', .9);\n    };\n\n    moveSvgInput = (svg, x, y, sizeOfPicture, widthOfCell, delay) => {\n        const domRect = svg.node().parentNode.getBoundingClientRect();\n        svg.transition()\n            .ease(d3.easeSin)\n            .delay(delay)\n            .duration(1000)\n            .attr('x', domRect.width - sizeOfPicture.w * widthOfCell - 100) //100 - is correction, i didn't catch why\n            .attr('y', y + 15);\n    };\n\n    moveSvgInputBack = (svg) => {\n        svg.transition()\n            .ease(d3.easeSin)\n            .duration(1000)\n            .attr('x', 0) //100 - is correction, i didn't catch why\n            .attr('y', 0);\n    };\n\n    openExplanationModal = () => {\n        this.setState({ isModalOpen: true });\n    };\n\n    closeExplanationModal = () => {\n        this.setState({ isModalOpen: false });\n    };\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className='App'>\n                <header className='App-header'>\n                    <Typography variant=\"h4\" gutterBottom style={{marginBottom: 0}}>\n                        Visualisation of neural network\n                    </Typography>\n                    <div className={'small'}>The whole algorithm consist only of 10 simple steps.</div>\n                </header>\n                <div className='Main-container'>\n                    <div className='d3body'>\n                        <div ref={refVis => (this.refVis = refVis)}>\n                            <div style={{display: 'none'}} ref={refVis => (this.refVisTempOne = refVis)}>\n                                <Provider>\n                                    <Node inline>{this.state.descrFormulaOne}</Node>\n                                </Provider>\n                            </div>\n                            <div style={{display: 'none'}} ref={refVis => (this.refVisTempTwo = refVis)}>\n                                <Provider>\n                                    <Node inline>{this.state.descrFormulaTwo}</Node>\n                                </Provider>\n                            </div>\n\n                            <svg ref={viz => (this.viz = viz)}\n                                 width={this.state.width} height={this.state.height}/>\n                        </div>\n                    </div>\n                    <StepperNN\n                        setStep={this.setStep}\n                        openExplanationModal={this.openExplanationModal}\n                    />\n                    {/*TODO move this out ot separate component*/}\n                    <Modal\n                        aria-labelledby=\"simple-modal-title\"\n                        aria-describedby=\"simple-modal-description\"\n                        open={this.state.isModalOpen}\n                        onClose={this.closeExplanationModal}\n                    >\n                        <div style={{\n                            top: `50%`,\n                            left: `60%`,\n                            transform: `translate(-50%, -60%)`,\n                        }} className={classes.paper}>\n                            <Typography variant=\"h6\" id=\"modal-title\">\n                                {this.state.currentDescription.head}\n                            </Typography>\n                            <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                                {this.state.currentDescription.body}\n                            </Typography>\n                            <Typography className={classes.instructions} align={\"center\"}>\n                                <Provider>\n                                    <p>\n                                        <Node inline>{this.state.currentStepFormula}</Node>\n                                    </p>\n                                </Provider>\n                            </Typography>\n                        </div>\n                    </Modal>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Training);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Training from './Training';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Training />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}